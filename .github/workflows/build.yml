name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    
jobs:
  build_and_release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install Emacs (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y emacs

    - name: Install Emacs (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install emacs

    - name: Install Emacs (Windows)
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        choco install emacs --confirm
 
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create src directory
      run: mkdir -p src
      
    - name: Tangle org-mode files
      run: emacs --batch --load org --eval "(org-babel-tangle-file \"production.org\")"

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --all-targets

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/kcats
        asset_name: your_binary-${{ matrix.os }}
        asset_content_type: application/octet-stream
